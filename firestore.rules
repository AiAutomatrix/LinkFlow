rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Rules for the 'users' collection
    match /users/{userId} {
      
      // Allow anyone to read a user's public profile data.
      // This is necessary for the /u/[username] pages to work.
      // We are not allowing `list` to prevent enumeration of all users.
      allow get: if true;
      
      // Allow an authenticated user to update their own document.
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Prevent users from being created or deleted directly via these rules.
      // Creation happens via server-side logic in AuthProvider. Deletion is a future feature.
      allow create, delete: if false;

      // Rules for the 'links' subcollection
      match /links/{linkId} {
        // Allow anyone to read the list of links for a user.
        allow get, list: if true;
        // Allow an authenticated user to manage their own links.
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Rules for the support clicks document
      match /clicks/support {
        // Allow only the authenticated user to read their own support clicks.
        allow get: if request.auth != null && request.auth.uid == userId;
        // Writes to this document happen via the API, which uses server-side logic,
        // so direct client writes can be denied.
        allow write: if false;
      }
    }
  }
}
